package 배열스윙;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;


import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class 랜덤버튼배열2_1 {

	public static void main(String[] args) {
		//1.프레임 만들기
		JFrame f = new JFrame();
		//2.프레임 크기 설정하기
		f.setSize(1500,1000);
		//위치 지정 안하겠다.
		f.setLayout(null);
		//버튼 500개 만들기, 500개가 담길 배열 만들기
		JButton[] buttons = new JButton[500];
		//반복문 사용해서 500개 버튼 만들기
		for (int i = 0; i < buttons.length; i++) {
			buttons[i] = new JButton();
			buttons[i].setText("버튼" +i);
		}
		//랜덤으로 위치 지정하기
		Random r = new Random();
		//color배열 만들고 모아두기
		Color[] color = {Color.red, Color.yellow, Color.pink};
		for (int i = 0; i < buttons.length; i++) {
			int x = r.nextInt(1500);
			int y = r.nextInt(1000);
		//인덱스를 넣어주기
			int v = r.nextInt(3);//0,1,2
			buttons[i].setBounds(x, y, 100, 50);
			//버튼 색을 몇가지 지정해서 임의로 설정, color 배열 중 아무 인덱스나 색으로 지정하면 됨.
			buttons[i].setBackground(color[v]);
			buttons[i].setForeground(Color.green);
			//화면에 얹기
			f.add(buttons[i]);
			//버튼마다 기능 달아주기
			buttons[i].addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					//버튼 위에 글자를 가지고 와준다.!
					String s = e.getActionCommand();
					JOptionPane.showMessageDialog(f, s + "번을 클릭하셨군요.!");
					
				}
			});
		}
		

		//x 눌렀을때 종료
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//지금까지 한거 보여줘라!
		f.setVisible(true);
	}

}
